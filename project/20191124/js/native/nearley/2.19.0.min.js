(function(root,factory){if(typeof module==="object"&&module.exports){module.exports=factory()}else{root.nearley=factory()}})(this,function(){function Rule(name,symbols,postprocess){this.id=++Rule.highestId;this.name=name;this.symbols=symbols;this.postprocess=postprocess;return this}Rule.highestId=0;Rule.prototype.toString=function(withCursorAt){function stringifySymbolSequence(e){return e.literal?JSON.stringify(e.literal):e.type?"%"+e.type:e.toString()}var symbolSequence=typeof withCursorAt==="undefined"?this.symbols.map(stringifySymbolSequence).join(" "):this.symbols.slice(0,withCursorAt).map(stringifySymbolSequence).join(" ")+" ● "+this.symbols.slice(withCursorAt).map(stringifySymbolSequence).join(" ");return this.name+" → "+symbolSequence};function State(rule,dot,reference,wantedBy){this.rule=rule;this.dot=dot;this.reference=reference;this.data=[];this.wantedBy=wantedBy;this.isComplete=this.dot===rule.symbols.length}State.prototype.toString=function(){return"{"+this.rule.toString(this.dot)+"}, from: "+(this.reference||0)};State.prototype.nextState=function(child){var state=new State(this.rule,this.dot+1,this.reference,this.wantedBy);state.left=this;state.right=child;if(state.isComplete){state.data=state.build()}return state};State.prototype.build=function(){var children=[];var node=this;do{children.push(node.right.data);node=node.left}while(node.left);children.reverse();return children};State.prototype.finish=function(){if(this.rule.postprocess){this.data=this.rule.postprocess(this.data,this.reference,Parser.fail)}};function Column(grammar,index){this.grammar=grammar;this.index=index;this.states=[];this.wants={};this.scannable=[];this.completed={}}Column.prototype.process=function(nextColumn){var states=this.states;var wants=this.wants;var completed=this.completed;for(var w=0;w<states.length;w++){var state=states[w];if(state.isComplete){state.finish();if(state.data!==Parser.fail){var wantedBy=state.wantedBy;for(var i=wantedBy.length;i--;){var left=wantedBy[i];this.complete(left,state)}if(state.reference===this.index){var exp=state.rule.name;(this.completed[exp]=this.completed[exp]||[]).push(state)}}}else{var exp=state.rule.symbols[state.dot];if(typeof exp!=="string"){this.scannable.push(state);continue}if(wants[exp]){wants[exp].push(state);if(completed.hasOwnProperty(exp)){var nulls=completed[exp];for(var i=0;i<nulls.length;i++){var right=nulls[i];this.complete(state,right)}}}else{wants[exp]=[state];this.predict(exp)}}}};Column.prototype.predict=function(exp){var rules=this.grammar.byName[exp]||[];for(var i=0;i<rules.length;i++){var r=rules[i];var wantedBy=this.wants[exp];var s=new State(r,0,this.index,wantedBy);this.states.push(s)}};Column.prototype.complete=function(left,right){var copy=left.nextState(right);this.states.push(copy)};function Grammar(rules,start){this.rules=rules;this.start=start||this.rules[0].name;var byName=this.byName={};this.rules.forEach(function(rule){if(!byName.hasOwnProperty(rule.name)){byName[rule.name]=[]}byName[rule.name].push(rule)})}Grammar.fromCompiled=function(rules,start){var lexer=rules.Lexer;if(rules.ParserStart){start=rules.ParserStart;rules=rules.ParserRules}var rules=rules.map(function(r){return new Rule(r.name,r.symbols,r.postprocess)});var g=new Grammar(rules,start);g.lexer=lexer;return g};function StreamLexer(){this.reset("")}StreamLexer.prototype.reset=function(data,state){this.buffer=data;this.index=0;this.line=state?state.line:1;this.lastLineBreak=state?-state.col:0};StreamLexer.prototype.next=function(){if(this.index<this.buffer.length){var ch=this.buffer[this.index++];if(ch==="\n"){this.line+=1;this.lastLineBreak=this.index}return{value:ch}}};StreamLexer.prototype.save=function(){return{line:this.line,col:this.index-this.lastLineBreak}};StreamLexer.prototype.formatError=function(token,message){var buffer=this.buffer;if(typeof buffer==="string"){var nextLineBreak=buffer.indexOf("\n",this.index);if(nextLineBreak===-1)nextLineBreak=buffer.length;var line=buffer.substring(this.lastLineBreak,nextLineBreak);var col=this.index-this.lastLineBreak;message+=" at line "+this.line+" col "+col+":\n\n";message+="  "+line+"\n";message+="  "+Array(col).join(" ")+"^";return message}else{return message+" at index "+(this.index-1)}};function Parser(rules,start,options){if(rules instanceof Grammar){var grammar=rules;var options=start}else{var grammar=Grammar.fromCompiled(rules,start)}this.grammar=grammar;this.options={keepHistory:false,lexer:grammar.lexer||new StreamLexer};for(var key in options||{}){this.options[key]=options[key]}this.lexer=this.options.lexer;this.lexerState=undefined;var column=new Column(grammar,0);var table=this.table=[column];column.wants[grammar.start]=[];column.predict(grammar.start);column.process();this.current=0}Parser.fail={};Parser.prototype.feed=function(chunk){var lexer=this.lexer;lexer.reset(chunk,this.lexerState);var token;while(token=lexer.next()){var column=this.table[this.current];if(!this.options.keepHistory){delete this.table[this.current-1]}var n=this.current+1;var nextColumn=new Column(this.grammar,n);this.table.push(nextColumn);var literal=token.text!==undefined?token.text:token.value;var value=lexer.constructor===StreamLexer?token.value:token;var scannable=column.scannable;for(var w=scannable.length;w--;){var state=scannable[w];var expect=state.rule.symbols[state.dot];if(expect.test?expect.test(value):expect.type?expect.type===token.type:expect.literal===literal){var next=state.nextState({data:value,token:token,isToken:true,reference:n-1});nextColumn.states.push(next)}}nextColumn.process();if(nextColumn.states.length===0){var err=new Error(this.reportError(token));err.offset=this.current;err.token=token;throw err}if(this.options.keepHistory){column.lexerState=lexer.save()}this.current++}if(column){this.lexerState=lexer.save()}this.results=this.finish();return this};Parser.prototype.reportError=function(token){var lines=[];var tokenDisplay=(token.type?token.type+" token: ":"")+JSON.stringify(token.value!==undefined?token.value:token);lines.push(this.lexer.formatError(token,"Syntax error"));lines.push("Unexpected "+tokenDisplay+". Instead, I was expecting to see one of the following:\n");var lastColumnIndex=this.table.length-2;var lastColumn=this.table[lastColumnIndex];var expectantStates=lastColumn.states.filter(function(state){var nextSymbol=state.rule.symbols[state.dot];return nextSymbol&&typeof nextSymbol!=="string"});var stateStacks=expectantStates.map(function(state){var stacks=this.buildStateStacks(state,[]);return stacks[0]},this);stateStacks.forEach(function(stateStack){var state=stateStack[0];var nextSymbol=state.rule.symbols[state.dot];var symbolDisplay=this.getSymbolDisplay(nextSymbol);lines.push("A "+symbolDisplay+" based on:");this.displayStateStack(stateStack,lines)},this);lines.push("");return lines.join("\n")};Parser.prototype.displayStateStack=function(stateStack,lines){var lastDisplay;var sameDisplayCount=0;for(var j=0;j<stateStack.length;j++){var state=stateStack[j];var display=state.rule.toString(state.dot);if(display===lastDisplay){sameDisplayCount++}else{if(sameDisplayCount>0){lines.push("    ⬆ ︎"+sameDisplayCount+" more lines identical to this")}sameDisplayCount=0;lines.push("    "+display)}lastDisplay=display}};Parser.prototype.getSymbolDisplay=function(symbol){var type=typeof symbol;if(type==="string"){return symbol}else if(type==="object"&&symbol.literal){return JSON.stringify(symbol.literal)}else if(type==="object"&&symbol instanceof RegExp){return"character matching "+symbol}else if(type==="object"&&symbol.type){return symbol.type+" token"}else{throw new Error("Unknown symbol type: "+symbol)}};Parser.prototype.buildStateStacks=function(state,visited){if(visited.indexOf(state)!==-1){return[]}if(state.wantedBy.length===0){return[[state]]}var that=this;return state.wantedBy.reduce(function(stacks,prevState){return stacks.concat(that.buildStateStacks(prevState,[state].concat(visited)).map(function(stack){return[state].concat(stack)}))},[])};Parser.prototype.save=function(){var column=this.table[this.current];column.lexerState=this.lexerState;return column};Parser.prototype.restore=function(column){var index=column.index;this.current=index;this.table[index]=column;this.table.splice(index+1);this.lexerState=column.lexerState;this.results=this.finish()};Parser.prototype.rewind=function(index){if(!this.options.keepHistory){throw new Error("set option `keepHistory` to enable rewinding")}this.restore(this.table[index])};Parser.prototype.finish=function(){var considerations=[];var start=this.grammar.start;var column=this.table[this.table.length-1];column.states.forEach(function(t){if(t.rule.name===start&&t.dot===t.rule.symbols.length&&t.reference===0&&t.data!==Parser.fail){considerations.push(t)}});return considerations.map(function(c){return c.data})};return{Parser:Parser,Grammar:Grammar,Rule:Rule}});